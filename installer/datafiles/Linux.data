%Variables
PF:	      'Linux'
OMI_SERVICE:  '/opt/omi/bin/service_control'
OMI_CONF_EDITOR: '/opt/omi/bin/omiconfigeditor'
OMI_CONF_FILE: '/etc/opt/omi/conf/omiserver.conf'
SEPKG_DIR_SCXAGENT: '/usr/share/selinux/packages/scxagent-logrotate'

PFDISTRO: 'ULINUX'
PFMAJOR: '1'
PFMINOR: '0'

%Defines
ULINUX

%Files
${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.fc;                          installer/selinux/scxagent-logrotate.fc;                                 644; root; ${{ROOT_GROUP_NAME}};
${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.te;                          installer/selinux/scxagent-logrotate.te;                                 644; root; ${{ROOT_GROUP_NAME}};
${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.el6.te;                      installer/selinux/scxagent-logrotate.el6.te;                             644; root; ${{ROOT_GROUP_NAME}};
${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.pp;                          intermediate/${{BUILD_CONFIGURATION}}/selinux/scxagent-logrotate.pp;     755; root; ${{ROOT_GROUP_NAME}};
${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.el6.pp;                      intermediate/${{BUILD_CONFIGURATION}}/selinux.el6/scxagent-logrotate.pp; 755; root; ${{ROOT_GROUP_NAME}};
/opt/microsoft/scx/bin/tools/GetLinuxOS.sh;                             intermediate/${{BUILD_CONFIGURATION}}/GetLinuxOS.sh;                     755; root; root
/etc/opt/microsoft/scx/conf/scx-release;                                installer/conf/scx-release;                                              644; root; ${{ROOT_GROUP_NAME}}; conffile
/etc/opt/microsoft/scx/conf/logrotate.conf;                             installer/conf/logrotate.conf;                                           644; root; ${{ROOT_GROUP_NAME}}; conffile
/etc/opt/microsoft/scx/conf/scxenum.conf;                               installer/conf/scxenum.conf;                                              644; root; ${{ROOT_GROUP_NAME}}; conffile

%Links
/etc/logrotate.d/scxagent;                                           /etc/opt/microsoft/scx/conf/logrotate.conf;                          644; root; ${{ROOT_GROUP_NAME}}

%Directories
/usr/share/selinux/packages;                                                                                                                     755; root; ${{ROOT_GROUP_NAME}}; sysdir
/usr/share/selinux/packages/scxagent-logrotate;                                                                                                  755; root; ${{ROOT_GROUP_NAME}}; sysdir
/etc/logrotate.d;                                                                                                                                755; root; ${{ROOT_GROUP_NAME}}; sysdir


%Postinstall_1500
if [ -e /usr/sbin/semodule ]; then
    echo "System appears to have SELinux installed, attempting to install selinux policy module for logrotate"
    echo "  Trying ${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.pp ..."
    sestatus=`sestatus|grep status|awk '{print $3}'`
    if [ -e /usr/bin/dpkg-deb -a "$sestatus" = "disabled" ]; then
        echo "WARNING: scxagent-logrotate selinux policy module has not yet installed due to selinux is disabled."
        echo "When enabling selinux, load scxagent-logrotate module manually with following commands for logrotate feature to work properly for scx logs."
        echo "/usr/sbin/semodule -i $SEPKG_DIR_SCXAGENT/scxagent-logrotate.pp >/dev/null 2>&1"
        echo "/sbin/restorecon -R /var/opt/microsoft/scx/log > /dev/null 2>&1"
    else
        /usr/sbin/semodule -i ${{SEPKG_DIR_SCXAGENT}}/scxagent-logrotate.pp >/dev/null 2>&1
        if [ $? -ne 0 ]; then
            echo "ERROR: scxagent-logrotate selinux policy module versions could not be installed"
            exit 0
        fi

        # Labeling scxagent log files
        /sbin/restorecon -R /var/opt/microsoft/scx/log > /dev/null 2>&1
    fi
fi

%Postuninstall_1500
if ${{PERFORMING_UPGRADE_NOT}}; then
    if [ -e /usr/sbin/semodule ]; then
        if [ ! -z "$(/usr/sbin/semodule -l | grep scxagent-logrotate)" ]; then
            echo "Removing selinux policy module for scxagent-logrotate ..."
            /usr/sbin/semodule -r scxagent-logrotate
        fi
    fi
fi

%Preinstall_50
# VerifySSLVersion
is_suse11_platform_with_openssl1(){
  if [ -e /etc/SuSE-release ];then
     VERSION=`cat /etc/SuSE-release|grep "VERSION = 11"|awk 'FS=":"{print $3}'`
     if [ ! -z "$VERSION" ];then
        which openssl1>/dev/null 2>&1
        if [ $? -eq 0 -a $VERSION -eq 11 ];then
           return 0
        fi
     fi
  fi
  return 1
}

OPENSSL_PATH="openssl"
is_suse11_platform_with_openssl1
if [ $? -eq 0 ];then
   OPENSSL_PATH="openssl1"
fi
if [ `uname -m` != "x86_64" ];then
    $OPENSSL_PATH version | awk '{print $2}' | grep -Eq '^1.0.'
    if [ $? -ne 0 ]; then
        echo 'Unsupported OpenSSL version - must be either 1.0.*.'
        echo 'Installation cannot proceed.'
        exit 1
    fi
else
    $OPENSSL_PATH version | awk '{print $2}' | grep -Eq '^1.0.|^1.1|^3.0'
    if [ $? -ne 0 ]; then
        echo 'Unsupported OpenSSL version - must be either 1.0.* or 1.1.*,3.0.*.'
        echo 'Installation cannot proceed.'
        exit 1
    fi
fi

%Postinstall_850
# Open port 1270 on install if it was open at uninstall
if [ -f /etc/opt/microsoft/scx/conf/scxagent-enable-port ]; then
    ${{OMI_CONF_EDITOR}} httpsport -a 1270 < ${{OMI_CONF_FILE}} > ${{OMI_CONF_FILE}}_temp
    mv ${{OMI_CONF_FILE}}_temp ${{OMI_CONF_FILE}}
fi
rm -f /etc/opt/microsoft/scx/conf/scxagent-enable-port

%Postinstall_875
set -e

%Postinstall_1100
${{OMI_SERVICE}} reload

%Postinstall_1200
# Have we previously installed a Universal Kit before? Keep track of that!
# This is used by the OS provider to mimic non-universal kit installations ...
if ! egrep -q '^ORIGINAL_KIT_TYPE=' /etc/opt/microsoft/scx/conf/scxconfig.conf; then
    if [ -s /etc/opt/microsoft/scx/conf/scx-release ]; then
        echo 'ORIGINAL_KIT_TYPE=Universal' >> /etc/opt/microsoft/scx/conf/scxconfig.conf
    else
        echo 'ORIGINAL_KIT_TYPE=!Universal' >> /etc/opt/microsoft/scx/conf/scxconfig.conf
    fi
fi

# Generate the conf/scx-release file
/opt/microsoft/scx/bin/tools/GetLinuxOS.sh

# Set up a cron job to logrotate
if [ ! -f /etc/cron.d/scxagent ]; then
    echo "0 */4 * * * root /usr/sbin/logrotate /etc/logrotate.d/scxagent --state /var/opt/microsoft/scx/log/scx-logrotate.status >/dev/null 2>&1" > /etc/cron.d/scxagent
fi


%Postuninstall_50
#if DISABLE_PORT != true
    # If we're called for upgrade, don't do anything
    if ${{PERFORMING_UPGRADE_NOT}}; then
        # Check if port 1270 is open
        ${{OMI_CONF_EDITOR}} httpsport -q 1270 < ${{OMI_CONF_FILE}} > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            touch /etc/opt/microsoft/scx/conf/scxagent-enable-port
            # Remove port 1270 from the list of ports that OMI will listen on
            ${{OMI_CONF_EDITOR}} httpsport -r 1270 < ${{OMI_CONF_FILE}} > ${{OMI_CONF_FILE}}_temp
            mv ${{OMI_CONF_FILE}}_temp ${{OMI_CONF_FILE}}
        fi
    fi
#endif

# If we're called for upgrade, don't clean up logrotate
if ${{PERFORMING_UPGRADE_NOT}}; then
    # Clean up logrotate
    rm -f /etc/logrotate.d/scxagent
    rm -f /etc/cron.d/scxagent
fi


%Postuninstall_1100
#include DeleteSoftLinks

${{OMI_SERVICE}} reload

# If we're called for upgrade, don't do anything
if ${{PERFORMING_UPGRADE_NOT}}; then
    DeleteSoftLinkToSudo
    DeleteSoftLinkToTmpDir
fi
