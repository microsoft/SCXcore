#!/bin/bash
##
# Copyright (c) Microsoft Corporation.  All rights reserved.
#
# Contains settings for the SCX WS-Management Deamon.
#
#

### BEGIN INIT INFO
# Provides:          scx-cimd
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Microsoft SCX CIM Server
# Description:       Microsoft System Center Agent - CIM Server daemon
### END INIT INFO

SCX_HOME=/opt/microsoft/scx
SCX_CIMD_NAME="Microsoft SCX CIM Server"

SCX_CIMD_BIN=$SCX_HOME/bin/omiserver
test -x $SCX_CIMD_BIN || { echo "$SCX_CIMD_BIN not installed";
    if [ "$1" = "stop" ]; then exit 0;
    else exit 5; fi; }

# PID File
PIDFILE=/var/opt/microsoft/scx/run/omiserver.pid

if [ -f /etc/init.d/functions ]; then
    INIT_STYLE=R      # INIT_STYLE uses R/S/D for its representative platform RedHat/SuSE/Debian 
    . /etc/init.d/functions
elif [ -f /etc/rc.status ]; then
    INIT_STYLE=S
    . /etc/rc.status && rc_reset
elif [ -f /lib/lsb/init-functions ]; then
    INIT_STYLE=D
    . /lib/lsb/init-functions
else
    echo -n "Could not source init functions."
    exit 1
fi

RETVAL=0
case "$1" in
     start)
        LD_LIBRARY_PATH=$SCX_HOME/lib; export LD_LIBRARY_PATH
        case $INIT_STYLE in
            D) 
                log_begin_msg "Starting $SCX_CIMD_NAME: "
                start-stop-daemon --start --quiet --pidfile $PIDFILE --name "scx-cimd" --startas $SCX_CIMD_BIN -- -d
                RETVAL=$?
                log_end_msg $RETVAL
                ;;               
            R) 
                echo -n "Starting $SCX_CIMD_NAME: "
                daemon $SCX_CIMD_BIN -d
                RETVAL=$?
                echo
                ;;
            S) 
                . /etc/sysconfig/language
                unset LC_ALL
                LC_CTYPE="$RC_LANG"; export LC_CTYPE
                echo -n "Starting $SCX_CIMD_NAME "
                startproc -p $PIDFILE $SCX_CIMD_BIN -d
                rc_status -v
                ;;
            *)  exit 1   ;;
        esac  ;;
     stop)
        LD_LIBRARY_PATH=$SCX_HOME/lib; export LD_LIBRARY_PATH
        case $INIT_STYLE in
            D)
                log_begin_msg "Shutting down $SCX_CIMD_NAME: "
                $SCX_CIMD_BIN -s > /dev/null 2>&1
                RETVAL=$?
                log_end_msg $RETVAL
                ;;
            R)
                echo -n "Shutting down $SCX_CIMD_NAME: "
                $SCX_CIMD_BIN -s > /dev/null 2>&1
                RETVAL=$?
                if [ $RETVAL -eq 0 ]; then echo_success; else echo_failure; fi
                echo
                ;;
            S)
                echo -n "Shutting down $SCX_CIMD_NAME: "
                $SCX_CIMD_BIN -s > /dev/null 2>&1
                killproc -p $PIDFILE $SCX_CIMD_BIN
                rc_status -v
                ;;
            *)  exit 1    ;;
        esac
        ;;
     restart)
        $0 stop
        $0 start
        case $INIT_STYLE in
            S)   rc_status  ;;
          D|R)   RETVAL=$?  ;;
            *)   exit 1     ;;
        esac
        ;;
     status)
        echo -n "Checking for service $SCX_CIMD_NAME "
        case $INIT_STYLE in
            D)
                status_of_proc $SCX_CIMD_BIN
                RETVAL=$?
                ;;
            R)
                status $SCX_CIMD_BIN
                RETVAL=$?
                ;;
            S)
                checkproc -p $PIDFILE $SCX_CIMD_BIN
                rc_status -v
                ;;
            *)  exit 1    ;;
        esac
        ;;
     *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
if [ $INIT_STYLE == S ]; then rc_exit; else exit $RETVAL; fi
